@model TexcelASPNETbyEddy.Models.JeuViewModel

@{
    ViewBag.Title = "Éditer";
}

<h2>Éditer</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Jeu</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idJeu)

        <div class="form-group">
            @Html.LabelFor(Model => Model.nomJeu," Nom ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(Model => Model.nomJeu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(Model => Model.nomJeu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.devellopeurJeu, " Devellopeur ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(Model => Model.devellopeurJeu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(Model => Model.devellopeurJeu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.descriptionJeu, " Description ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(Model => Model.descriptionJeu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(Model => Model.descriptionJeu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.configurationMinimaleJeu, " Configuration ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(Model => Model.configurationMinimaleJeu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.configurationMinimaleJeu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.lesGenres, " Genres ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for(int i=0; i < Model.lesGenres.Count();i++)
                {
                    @Html.EditorFor(m=> Model.lesGenres[i].Checked)
                    @Html.DisplayFor(m=> Model.lesGenres[i].Description)

                    @Html.HiddenFor(m=> Model.lesGenres[i].Description)
                    @Html.HiddenFor(m => Model.lesGenres[i].Id)

                    //<span style="visibility:hidden;">ppp</span>//espace
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.lesThemes, " Themes ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (int i = 0; i < Model.lesThemes.Count(); i++)
                {
                    @Html.EditorFor(m => Model.lesThemes[i].Checked)
                    @Html.DisplayFor(m => Model.lesThemes[i].Description)

                    @Html.HiddenFor(m => Model.lesThemes[i].Description)
                    @Html.HiddenFor(m => Model.lesThemes[i].Id)

                    //<span style="visibility:hidden;">ppp</span>//espace
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(Model => Model.lesClassifications, " Classifications ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (int i = 0; i < Model.lesClassifications.Count(); i++)
                {
                    @Html.EditorFor(m => Model.lesClassifications[i].Checked)
                    @Html.DisplayFor(m => Model.lesClassifications[i].Description)

                    @Html.HiddenFor(m => Model.lesClassifications[i].Description)
                    @Html.HiddenFor(m => Model.lesClassifications[i].Id)

                    <span style="visibility:hidden;">ppp</span>//espace
                }
            </div>
        </div>

        <!--<div class="form-group">
            Html.LabelFor(model => model.idProjetTest, "idProjetTest", htmlAttributes: new { class = "control-label col-md-2" })
            <div class="col-md-10">
                Html.DropDownList("idProjetTest", null, htmlAttributes: new{ class = "form-control" })
                Html.ValidationMessageFor(model => model.idProjetTest, "", new { class = "text-danger" })
            </div>
        </div>-->

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Enregistrer" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Retour à la liste", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
